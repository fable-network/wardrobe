// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="normal"
  >
    <ForwardRef>
      You are changing the status of this order to Shipped
    </ForwardRef>
    <ForwardRef>
      This body has pre-defined paddings.
    </ForwardRef>
    <ForwardRef>
      <ForwardRef
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </ForwardRef>
      <ForwardRef
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </ForwardRef>
    </ForwardRef>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef>
            You are changing the status of this order to Shipped
          </ForwardRef>,
          <ForwardRef>
            This body has pre-defined paddings.
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>
          </ForwardRef>,
        ],
        false,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            Object {
              "tabIndex": 0,
            },
          ],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "isStatic": true,
            "rules": Array [
              "outline:none;",
            ],
          },
          "displayName": "Dialog__HeaderStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__BodyStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>,
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__FooterStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
          "target": "footer",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:column nowrap;background-color:",
          [Function],
          ";box-shadow:",
          [Function],
          ";border:solid 1px ",
          [Function],
          ";border-radius:",
          [Function],
          ";width:100%;max-width:100%;position:relative;",
          [Function],
          ";",
          [Function],
          ";",
          ".Dialog__HeaderStyled-sc-17jq4z8-0",
          "{border-bottom:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";font-size:1.25em;font-weight:500;text-align:center;color:",
          [Function],
          ";",
          [Function],
          ";}",
          ".Dialog__FooterStyled-sc-17jq4z8-1",
          "{border-top:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
          [Function],
          ";}",
          ".Dialog__BodyStyled-sc-17jq4z8-2",
          "{flex:1;padding:",
          [Function],
          ";}",
        ],
      },
      "displayName": "Dialog__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef>
              You are changing the status of this order to Shipped
            </ForwardRef>,
            <ForwardRef>
              This body has pre-defined paddings.
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>
            </ForwardRef>,
          ],
          false,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              Object {
                "tabIndex": 0,
              },
            ],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
              "isStatic": true,
              "rules": Array [
                "outline:none;",
              ],
            },
            "displayName": "Dialog__HeaderStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__BodyStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>,
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__FooterStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:column nowrap;background-color:",
            [Function],
            ";box-shadow:",
            [Function],
            ";border:solid 1px ",
            [Function],
            ";border-radius:",
            [Function],
            ";width:100%;max-width:100%;position:relative;",
            [Function],
            ";",
            [Function],
            ";",
            ".Dialog__HeaderStyled-sc-17jq4z8-0",
            "{border-bottom:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";font-size:1.25em;font-weight:500;text-align:center;color:",
            [Function],
            ";",
            [Function],
            ";}",
            ".Dialog__FooterStyled-sc-17jq4z8-1",
            "{border-top:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
            [Function],
            ";}",
            ".Dialog__BodyStyled-sc-17jq4z8-2",
            "{flex:1;padding:",
            [Function],
            ";}",
          ],
        },
        "displayName": "Dialog__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="small"
  >
    <ForwardRef>
      You are changing the status of this order to Shipped
    </ForwardRef>
    <ForwardRef>
      This body has pre-defined paddings.
    </ForwardRef>
    <ForwardRef>
      <ForwardRef
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </ForwardRef>
      <ForwardRef
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </ForwardRef>
    </ForwardRef>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef>
            You are changing the status of this order to Shipped
          </ForwardRef>,
          <ForwardRef>
            This body has pre-defined paddings.
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>
          </ForwardRef>,
        ],
        false,
      ],
      "size": "small",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            Object {
              "tabIndex": 0,
            },
          ],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "isStatic": true,
            "rules": Array [
              "outline:none;",
            ],
          },
          "displayName": "Dialog__HeaderStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__BodyStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>,
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__FooterStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
          "target": "footer",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:column nowrap;background-color:",
          [Function],
          ";box-shadow:",
          [Function],
          ";border:solid 1px ",
          [Function],
          ";border-radius:",
          [Function],
          ";width:100%;max-width:100%;position:relative;",
          [Function],
          ";",
          [Function],
          ";",
          ".Dialog__HeaderStyled-sc-17jq4z8-0",
          "{border-bottom:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";font-size:1.25em;font-weight:500;text-align:center;color:",
          [Function],
          ";",
          [Function],
          ";}",
          ".Dialog__FooterStyled-sc-17jq4z8-1",
          "{border-top:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
          [Function],
          ";}",
          ".Dialog__BodyStyled-sc-17jq4z8-2",
          "{flex:1;padding:",
          [Function],
          ";}",
        ],
      },
      "displayName": "Dialog__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef>
              You are changing the status of this order to Shipped
            </ForwardRef>,
            <ForwardRef>
              This body has pre-defined paddings.
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>
            </ForwardRef>,
          ],
          false,
        ],
        "size": "small",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              Object {
                "tabIndex": 0,
              },
            ],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
              "isStatic": true,
              "rules": Array [
                "outline:none;",
              ],
            },
            "displayName": "Dialog__HeaderStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__BodyStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>,
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__FooterStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:column nowrap;background-color:",
            [Function],
            ";box-shadow:",
            [Function],
            ";border:solid 1px ",
            [Function],
            ";border-radius:",
            [Function],
            ";width:100%;max-width:100%;position:relative;",
            [Function],
            ";",
            [Function],
            ";",
            ".Dialog__HeaderStyled-sc-17jq4z8-0",
            "{border-bottom:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";font-size:1.25em;font-weight:500;text-align:center;color:",
            [Function],
            ";",
            [Function],
            ";}",
            ".Dialog__FooterStyled-sc-17jq4z8-1",
            "{border-top:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
            [Function],
            ";}",
            ".Dialog__BodyStyled-sc-17jq4z8-2",
            "{flex:1;padding:",
            [Function],
            ";}",
          ],
        },
        "displayName": "Dialog__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="large"
  >
    <ForwardRef>
      You are changing the status of this order to Shipped
    </ForwardRef>
    <ForwardRef>
      This body has pre-defined paddings.
    </ForwardRef>
    <ForwardRef>
      <ForwardRef
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </ForwardRef>
      <ForwardRef
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </ForwardRef>
    </ForwardRef>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef>
            You are changing the status of this order to Shipped
          </ForwardRef>,
          <ForwardRef>
            This body has pre-defined paddings.
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>
          </ForwardRef>,
        ],
        false,
      ],
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            Object {
              "tabIndex": 0,
            },
          ],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "isStatic": true,
            "rules": Array [
              "outline:none;",
            ],
          },
          "displayName": "Dialog__HeaderStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__BodyStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>,
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__FooterStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
          "target": "footer",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:column nowrap;background-color:",
          [Function],
          ";box-shadow:",
          [Function],
          ";border:solid 1px ",
          [Function],
          ";border-radius:",
          [Function],
          ";width:100%;max-width:100%;position:relative;",
          [Function],
          ";",
          [Function],
          ";",
          ".Dialog__HeaderStyled-sc-17jq4z8-0",
          "{border-bottom:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";font-size:1.25em;font-weight:500;text-align:center;color:",
          [Function],
          ";",
          [Function],
          ";}",
          ".Dialog__FooterStyled-sc-17jq4z8-1",
          "{border-top:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
          [Function],
          ";}",
          ".Dialog__BodyStyled-sc-17jq4z8-2",
          "{flex:1;padding:",
          [Function],
          ";}",
        ],
      },
      "displayName": "Dialog__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef>
              You are changing the status of this order to Shipped
            </ForwardRef>,
            <ForwardRef>
              This body has pre-defined paddings.
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>
            </ForwardRef>,
          ],
          false,
        ],
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              Object {
                "tabIndex": 0,
              },
            ],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
              "isStatic": true,
              "rules": Array [
                "outline:none;",
              ],
            },
            "displayName": "Dialog__HeaderStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__BodyStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>,
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__FooterStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:column nowrap;background-color:",
            [Function],
            ";box-shadow:",
            [Function],
            ";border:solid 1px ",
            [Function],
            ";border-radius:",
            [Function],
            ";width:100%;max-width:100%;position:relative;",
            [Function],
            ";",
            [Function],
            ";",
            ".Dialog__HeaderStyled-sc-17jq4z8-0",
            "{border-bottom:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";font-size:1.25em;font-weight:500;text-align:center;color:",
            [Function],
            ";",
            [Function],
            ";}",
            ".Dialog__FooterStyled-sc-17jq4z8-1",
            "{border-top:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
            [Function],
            ";}",
            ".Dialog__BodyStyled-sc-17jq4z8-2",
            "{flex:1;padding:",
            [Function],
            ";}",
          ],
        },
        "displayName": "Dialog__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="auto"
  >
    <ForwardRef>
      You are changing the status of this order to Shipped
    </ForwardRef>
    <ForwardRef>
      This body has pre-defined paddings.
    </ForwardRef>
    <ForwardRef>
      <ForwardRef
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </ForwardRef>
      <ForwardRef
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </ForwardRef>
    </ForwardRef>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        Array [
          <ForwardRef>
            You are changing the status of this order to Shipped
          </ForwardRef>,
          <ForwardRef>
            This body has pre-defined paddings.
          </ForwardRef>,
          <ForwardRef>
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>
          </ForwardRef>,
        ],
        false,
      ],
      "size": "auto",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [
            Object {
              "tabIndex": 0,
            },
          ],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "isStatic": true,
            "rules": Array [
              "outline:none;",
            ],
          },
          "displayName": "Dialog__HeaderStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
          "target": "header",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__BodyStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </ForwardRef>,
            <ForwardRef
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </ForwardRef>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Button-sc-1i0dne9-0",
                "isStatic": false,
                "rules": Array [
                  "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                  [Function],
                  ";line-height:",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                  [Function],
                  ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                  [Function],
                  ";}",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                  [Function],
                  ";",
                ],
              },
              "defaultProps": Object {
                "appearance": "secondary",
                "disabled": false,
                "renderAs": "button",
                "size": "normal",
              },
              "displayName": "Button",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "appearance": [Function],
                "children": [Function],
                "className": [Function],
                "disabled": [Function],
                "renderAs": [Function],
                "size": [Function],
                "type": [Function],
              },
              "render": [Function],
              "styledComponentId": "Button-sc-1i0dne9-0",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__FooterStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
          "target": "footer",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      false,
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:column nowrap;background-color:",
          [Function],
          ";box-shadow:",
          [Function],
          ";border:solid 1px ",
          [Function],
          ";border-radius:",
          [Function],
          ";width:100%;max-width:100%;position:relative;",
          [Function],
          ";",
          [Function],
          ";",
          ".Dialog__HeaderStyled-sc-17jq4z8-0",
          "{border-bottom:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";font-size:1.25em;font-weight:500;text-align:center;color:",
          [Function],
          ";",
          [Function],
          ";}",
          ".Dialog__FooterStyled-sc-17jq4z8-1",
          "{border-top:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
          [Function],
          ";}",
          ".Dialog__BodyStyled-sc-17jq4z8-2",
          "{flex:1;padding:",
          [Function],
          ";}",
        ],
      },
      "displayName": "Dialog__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          Array [
            <ForwardRef>
              You are changing the status of this order to Shipped
            </ForwardRef>,
            <ForwardRef>
              This body has pre-defined paddings.
            </ForwardRef>,
            <ForwardRef>
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>
            </ForwardRef>,
          ],
          false,
        ],
        "size": "auto",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              Object {
                "tabIndex": 0,
              },
            ],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
              "isStatic": true,
              "rules": Array [
                "outline:none;",
              ],
            },
            "displayName": "Dialog__HeaderStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__HeaderStyled-sc-17jq4z8-0",
            "target": "header",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__BodyStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <ForwardRef
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </ForwardRef>,
              <ForwardRef
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </ForwardRef>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Button-sc-1i0dne9-0",
                  "isStatic": false,
                  "rules": Array [
                    "display:inline-flex;flex-wrap:nowrap;justify-content:center;align-items:center;box-sizing:border-box;font-size:",
                    [Function],
                    ";line-height:",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";border:solid 1px transparent;transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;cursor:pointer;max-width:100%;overflow:hidden;text-overflow:ellipsis;font-family:inherit;font-weight:normal;&:hover{box-shadow:",
                    [Function],
                    ";transition:border-color 150ms linear,background-color 150ms linear,box-shadow 150ms linear;}&:disabled{cursor:not-allowed;}&:hover:disabled{box-shadow:",
                    [Function],
                    ";}",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                    [Function],
                    ";",
                  ],
                },
                "defaultProps": Object {
                  "appearance": "secondary",
                  "disabled": false,
                  "renderAs": "button",
                  "size": "normal",
                },
                "displayName": "Button",
                "foldedComponentIds": Array [],
                "propTypes": Object {
                  "appearance": [Function],
                  "children": [Function],
                  "className": [Function],
                  "disabled": [Function],
                  "renderAs": [Function],
                  "size": [Function],
                  "type": [Function],
                },
                "render": [Function],
                "styledComponentId": "Button-sc-1i0dne9-0",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__FooterStyled-sc-17jq4z8-1",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__FooterStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__FooterStyled-sc-17jq4z8-1",
            "target": "footer",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        false,
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:column nowrap;background-color:",
            [Function],
            ";box-shadow:",
            [Function],
            ";border:solid 1px ",
            [Function],
            ";border-radius:",
            [Function],
            ";width:100%;max-width:100%;position:relative;",
            [Function],
            ";",
            [Function],
            ";",
            ".Dialog__HeaderStyled-sc-17jq4z8-0",
            "{border-bottom:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";font-size:1.25em;font-weight:500;text-align:center;color:",
            [Function],
            ";",
            [Function],
            ";}",
            ".Dialog__FooterStyled-sc-17jq4z8-1",
            "{border-top:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
            [Function],
            ";}",
            ".Dialog__BodyStyled-sc-17jq4z8-2",
            "{flex:1;padding:",
            [Function],
            ";}",
          ],
        },
        "displayName": "Dialog__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={true}
    size="normal"
  >
    <ForwardRef>
      Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
    </ForwardRef>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <ForwardRef>
          Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
        </ForwardRef>,
        <ForwardRef
          appearance="primary"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          <Icon
            color="inherit"
            fill="currentColor"
            height="1em"
            name="cross"
            strokeWidth={1}
            width="1em"
          />
        </ForwardRef>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
        },
        "ref": null,
        "rendered": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "isStatic": true,
            "rules": Array [],
          },
          "displayName": "Dialog__BodyStyled",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "appearance": "primary",
          "children": <Icon
            color="inherit"
            fill="currentColor"
            height="1em"
            name="cross"
            strokeWidth={1}
            width="1em"
          />,
          "disabled": false,
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "inherit",
            "fill": "currentColor",
            "height": "1em",
            "name": "cross",
            "strokeWidth": 1,
            "width": "1em",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Dialog__CloseButton-sc-17jq4z8-4",
            "isStatic": false,
            "rules": Array [
              "display:inline-block;outline:none;border:none;cursor:",
              [Function],
              ";margin:0;padding:",
              [Function],
              ";background:none;color:",
              [Function],
              ";&,&:link,&:active,&:hover,&:focus,&:visited{text-decoration:none;}&:hover,&:active,&:focus{color:",
              [Function],
              ";}",
              "position:absolute;top:8px;right:8px;overflow:hidden;",
            ],
          },
          "defaultProps": Object {
            "appearance": "primary",
            "disabled": false,
            "type": "button",
          },
          "displayName": "Dialog__CloseButton",
          "foldedComponentIds": Array [
            "IconButton-sc-1n6emqy-0",
          ],
          "propTypes": Object {
            "appearance": [Function],
            "disabled": [Function],
            "type": [Function],
          },
          "render": [Function],
          "styledComponentId": "Dialog__CloseButton-sc-17jq4z8-4",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:column nowrap;background-color:",
          [Function],
          ";box-shadow:",
          [Function],
          ";border:solid 1px ",
          [Function],
          ";border-radius:",
          [Function],
          ";width:100%;max-width:100%;position:relative;",
          [Function],
          ";",
          [Function],
          ";",
          ".Dialog__HeaderStyled-sc-17jq4z8-0",
          "{border-bottom:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";font-size:1.25em;font-weight:500;text-align:center;color:",
          [Function],
          ";",
          [Function],
          ";}",
          ".Dialog__FooterStyled-sc-17jq4z8-1",
          "{border-top:solid 1px ",
          [Function],
          ";padding:",
          [Function],
          ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
          [Function],
          ";}",
          ".Dialog__BodyStyled-sc-17jq4z8-2",
          "{flex:1;padding:",
          [Function],
          ";}",
        ],
      },
      "displayName": "Dialog__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
          </ForwardRef>,
          <ForwardRef
            appearance="primary"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <Icon
              color="inherit"
              fill="currentColor"
              height="1em"
              name="cross"
              strokeWidth={1}
              width="1em"
            />
          </ForwardRef>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
          },
          "ref": null,
          "rendered": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__BodyStyled-sc-17jq4z8-2",
              "isStatic": true,
              "rules": Array [],
            },
            "displayName": "Dialog__BodyStyled",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Dialog__BodyStyled-sc-17jq4z8-2",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "appearance": "primary",
            "children": <Icon
              color="inherit"
              fill="currentColor"
              height="1em"
              name="cross"
              strokeWidth={1}
              width="1em"
            />,
            "disabled": false,
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "inherit",
              "fill": "currentColor",
              "height": "1em",
              "name": "cross",
              "strokeWidth": 1,
              "width": "1em",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Dialog__CloseButton-sc-17jq4z8-4",
              "isStatic": false,
              "rules": Array [
                "display:inline-block;outline:none;border:none;cursor:",
                [Function],
                ";margin:0;padding:",
                [Function],
                ";background:none;color:",
                [Function],
                ";&,&:link,&:active,&:hover,&:focus,&:visited{text-decoration:none;}&:hover,&:active,&:focus{color:",
                [Function],
                ";}",
                "position:absolute;top:8px;right:8px;overflow:hidden;",
              ],
            },
            "defaultProps": Object {
              "appearance": "primary",
              "disabled": false,
              "type": "button",
            },
            "displayName": "Dialog__CloseButton",
            "foldedComponentIds": Array [
              "IconButton-sc-1n6emqy-0",
            ],
            "propTypes": Object {
              "appearance": [Function],
              "disabled": [Function],
              "type": [Function],
            },
            "render": [Function],
            "styledComponentId": "Dialog__CloseButton-sc-17jq4z8-4",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Dialog__Wrapper-sc-17jq4z8-3",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:column nowrap;background-color:",
            [Function],
            ";box-shadow:",
            [Function],
            ";border:solid 1px ",
            [Function],
            ";border-radius:",
            [Function],
            ";width:100%;max-width:100%;position:relative;",
            [Function],
            ";",
            [Function],
            ";",
            ".Dialog__HeaderStyled-sc-17jq4z8-0",
            "{border-bottom:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";font-size:1.25em;font-weight:500;text-align:center;color:",
            [Function],
            ";",
            [Function],
            ";}",
            ".Dialog__FooterStyled-sc-17jq4z8-1",
            "{border-top:solid 1px ",
            [Function],
            ";padding:",
            [Function],
            ";display:flex;flex-flow:column nowrap;align-items:center;> * + *{margin-top:20px;}",
            [Function],
            ";}",
            ".Dialog__BodyStyled-sc-17jq4z8-2",
            "{flex:1;padding:",
            [Function],
            ";}",
          ],
        },
        "displayName": "Dialog__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Dialog__Wrapper-sc-17jq4z8-3",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
