// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="normal"
  >
    <Dialog__HeaderStyled>
      You are changing the status of this order to Shipped
    </Dialog__HeaderStyled>
    <Dialog__BodyStyled>
      This body has pre-defined paddings.
    </Dialog__BodyStyled>
    <Dialog__FooterStyled>
      <Button
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </Button>
      <Button
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </Button>
    </Dialog__FooterStyled>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        Array [
          <Dialog__HeaderStyled>
            You are changing the status of this order to Shipped
          </Dialog__HeaderStyled>,
          <Dialog__BodyStyled>
            This body has pre-defined paddings.
          </Dialog__BodyStyled>,
          <Dialog__FooterStyled>
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>
          </Dialog__FooterStyled>,
        ],
        false,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>,
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          Array [
            <Dialog__HeaderStyled>
              You are changing the status of this order to Shipped
            </Dialog__HeaderStyled>,
            <Dialog__BodyStyled>
              This body has pre-defined paddings.
            </Dialog__BodyStyled>,
            <Dialog__FooterStyled>
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>
            </Dialog__FooterStyled>,
          ],
          false,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>,
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="small"
  >
    <Dialog__HeaderStyled>
      You are changing the status of this order to Shipped
    </Dialog__HeaderStyled>
    <Dialog__BodyStyled>
      This body has pre-defined paddings.
    </Dialog__BodyStyled>
    <Dialog__FooterStyled>
      <Button
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </Button>
      <Button
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </Button>
    </Dialog__FooterStyled>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        Array [
          <Dialog__HeaderStyled>
            You are changing the status of this order to Shipped
          </Dialog__HeaderStyled>,
          <Dialog__BodyStyled>
            This body has pre-defined paddings.
          </Dialog__BodyStyled>,
          <Dialog__FooterStyled>
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>
          </Dialog__FooterStyled>,
        ],
        false,
      ],
      "size": "small",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>,
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          Array [
            <Dialog__HeaderStyled>
              You are changing the status of this order to Shipped
            </Dialog__HeaderStyled>,
            <Dialog__BodyStyled>
              This body has pre-defined paddings.
            </Dialog__BodyStyled>,
            <Dialog__FooterStyled>
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>
            </Dialog__FooterStyled>,
          ],
          false,
        ],
        "size": "small",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>,
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="large"
  >
    <Dialog__HeaderStyled>
      You are changing the status of this order to Shipped
    </Dialog__HeaderStyled>
    <Dialog__BodyStyled>
      This body has pre-defined paddings.
    </Dialog__BodyStyled>
    <Dialog__FooterStyled>
      <Button
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </Button>
      <Button
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </Button>
    </Dialog__FooterStyled>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        Array [
          <Dialog__HeaderStyled>
            You are changing the status of this order to Shipped
          </Dialog__HeaderStyled>,
          <Dialog__BodyStyled>
            This body has pre-defined paddings.
          </Dialog__BodyStyled>,
          <Dialog__FooterStyled>
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>
          </Dialog__FooterStyled>,
        ],
        false,
      ],
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>,
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          Array [
            <Dialog__HeaderStyled>
              You are changing the status of this order to Shipped
            </Dialog__HeaderStyled>,
            <Dialog__BodyStyled>
              This body has pre-defined paddings.
            </Dialog__BodyStyled>,
            <Dialog__FooterStyled>
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>
            </Dialog__FooterStyled>,
          ],
          false,
        ],
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>,
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={false}
    size="auto"
  >
    <Dialog__HeaderStyled>
      You are changing the status of this order to Shipped
    </Dialog__HeaderStyled>
    <Dialog__BodyStyled>
      This body has pre-defined paddings.
    </Dialog__BodyStyled>
    <Dialog__FooterStyled>
      <Button
        appearance="primary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Let us do that!
      </Button>
      <Button
        appearance="secondary"
        disabled={false}
        onClick={[Function]}
        renderAs="button"
        size="normal"
      >
        Cancel
      </Button>
    </Dialog__FooterStyled>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        Array [
          <Dialog__HeaderStyled>
            You are changing the status of this order to Shipped
          </Dialog__HeaderStyled>,
          <Dialog__BodyStyled>
            This body has pre-defined paddings.
          </Dialog__BodyStyled>,
          <Dialog__FooterStyled>
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>
          </Dialog__FooterStyled>,
        ],
        false,
      ],
      "size": "auto",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "You are changing the status of this order to Shipped",
        },
        "ref": null,
        "rendered": "You are changing the status of this order to Shipped",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "This body has pre-defined paddings.",
        },
        "ref": null,
        "rendered": "This body has pre-defined paddings.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              appearance="primary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Let us do that!
            </Button>,
            <Button
              appearance="secondary"
              disabled={false}
              onClick={[Function]}
              renderAs="button"
              size="normal"
            >
              Cancel
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "primary",
              "children": "Let us do that!",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Let us do that!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appearance": "secondary",
              "children": "Cancel",
              "disabled": false,
              "onClick": [Function],
              "renderAs": "button",
              "size": "normal",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          Array [
            <Dialog__HeaderStyled>
              You are changing the status of this order to Shipped
            </Dialog__HeaderStyled>,
            <Dialog__BodyStyled>
              This body has pre-defined paddings.
            </Dialog__BodyStyled>,
            <Dialog__FooterStyled>
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>
            </Dialog__FooterStyled>,
          ],
          false,
        ],
        "size": "auto",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "You are changing the status of this order to Shipped",
          },
          "ref": null,
          "rendered": "You are changing the status of this order to Shipped",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "This body has pre-defined paddings.",
          },
          "ref": null,
          "rendered": "This body has pre-defined paddings.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                appearance="primary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Let us do that!
              </Button>,
              <Button
                appearance="secondary"
                disabled={false}
                onClick={[Function]}
                renderAs="button"
                size="normal"
              >
                Cancel
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "primary",
                "children": "Let us do that!",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Let us do that!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appearance": "secondary",
                "children": "Cancel",
                "disabled": false,
                "onClick": [Function],
                "renderAs": "button",
                "size": "normal",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dialog Component snapshots should match snapshot 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dialog
    onClose={[Function]}
    showCloseButton={true}
    size="normal"
  >
    <Dialog__BodyStyled>
      Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
    </Dialog__BodyStyled>
  </Dialog>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Dialog__BodyStyled>
          Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
        </Dialog__BodyStyled>,
        <Dialog__CloseButton
          appearance="primary"
          onClick={[Function]}
        >
          <Icon
            color="inherit"
            fill="currentColor"
            height="1em"
            name="cross"
            strokeWidth={1}
            width="1em"
          />
        </Dialog__CloseButton>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
        },
        "ref": null,
        "rendered": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "appearance": "primary",
          "children": <Icon
            color="inherit"
            fill="currentColor"
            height="1em"
            name="cross"
            strokeWidth={1}
            width="1em"
          />,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "inherit",
            "fill": "currentColor",
            "height": "1em",
            "name": "cross",
            "strokeWidth": 1,
            "width": "1em",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Dialog__BodyStyled>
            Body-only dialogs can be used for modals with complex structure (e.g. to display product details).
          </Dialog__BodyStyled>,
          <Dialog__CloseButton
            appearance="primary"
            onClick={[Function]}
          >
            <Icon
              color="inherit"
              fill="currentColor"
              height="1em"
              name="cross"
              strokeWidth={1}
              width="1em"
            />
          </Dialog__CloseButton>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
          },
          "ref": null,
          "rendered": "Body-only dialogs can be used for modals with complex structure (e.g. to display product details).",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "appearance": "primary",
            "children": <Icon
              color="inherit"
              fill="currentColor"
              height="1em"
              name="cross"
              strokeWidth={1}
              width="1em"
            />,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "color": "inherit",
              "fill": "currentColor",
              "height": "1em",
              "name": "cross",
              "strokeWidth": 1,
              "width": "1em",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
