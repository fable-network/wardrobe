// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="normal"
  >
    <Modal__HeaderStyled>
      You are changing the status of this order to Shipped
    </Modal__HeaderStyled>
    <Modal__BodyStyled>
      This body has pre-defined paddings.
    </Modal__BodyStyled>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Let's do that!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Cancel
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "normal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>,
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "normal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "You are changing the status of this order to Shipped",
            },
            "ref": null,
            "rendered": "You are changing the status of this order to Shipped",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This body has pre-defined paddings.",
            },
            "ref": null,
            "rendered": "This body has pre-defined paddings.",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Let's do that!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Let's do that!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Cancel",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "normal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                You are changing the status of this order to Shipped
              </Modal__HeaderStyled>,
              <Modal__BodyStyled>
                This body has pre-defined paddings.
              </Modal__BodyStyled>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "normal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "You are changing the status of this order to Shipped",
              },
              "ref": null,
              "rendered": "You are changing the status of this order to Shipped",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This body has pre-defined paddings.",
              },
              "ref": null,
              "rendered": "This body has pre-defined paddings.",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Let's do that!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Let's do that!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Let's do that!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Cancel",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Modal Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="small"
  >
    <Modal__HeaderStyled>
      You are changing the status of this order to Shipped
    </Modal__HeaderStyled>
    <Modal__BodyStyled>
      This body has pre-defined paddings.
    </Modal__BodyStyled>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Let's do that!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Cancel
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="small"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "small",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="small"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>,
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "small",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "You are changing the status of this order to Shipped",
            },
            "ref": null,
            "rendered": "You are changing the status of this order to Shipped",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This body has pre-defined paddings.",
            },
            "ref": null,
            "rendered": "This body has pre-defined paddings.",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Let's do that!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Let's do that!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Cancel",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="small"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "small",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="small"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                You are changing the status of this order to Shipped
              </Modal__HeaderStyled>,
              <Modal__BodyStyled>
                This body has pre-defined paddings.
              </Modal__BodyStyled>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "small",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "You are changing the status of this order to Shipped",
              },
              "ref": null,
              "rendered": "You are changing the status of this order to Shipped",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This body has pre-defined paddings.",
              },
              "ref": null,
              "rendered": "This body has pre-defined paddings.",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Let's do that!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Let's do that!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Let's do that!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Cancel",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Modal Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="large"
  >
    <Modal__HeaderStyled>
      You are changing the status of this order to Shipped
    </Modal__HeaderStyled>
    <Modal__BodyStyled>
      This body has pre-defined paddings.
    </Modal__BodyStyled>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Let's do that!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Cancel
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="large"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "large",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="large"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>,
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "large",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "You are changing the status of this order to Shipped",
            },
            "ref": null,
            "rendered": "You are changing the status of this order to Shipped",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This body has pre-defined paddings.",
            },
            "ref": null,
            "rendered": "This body has pre-defined paddings.",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Let's do that!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Let's do that!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Cancel",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="large"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "large",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="large"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                You are changing the status of this order to Shipped
              </Modal__HeaderStyled>,
              <Modal__BodyStyled>
                This body has pre-defined paddings.
              </Modal__BodyStyled>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "large",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "You are changing the status of this order to Shipped",
              },
              "ref": null,
              "rendered": "You are changing the status of this order to Shipped",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This body has pre-defined paddings.",
              },
              "ref": null,
              "rendered": "This body has pre-defined paddings.",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Let's do that!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Let's do that!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Let's do that!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Cancel",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Modal Component snapshots should match snapshot 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="auto"
  >
    <Modal__HeaderStyled>
      You are changing the status of this order to Shipped
    </Modal__HeaderStyled>
    <Modal__BodyStyled>
      This body has pre-defined paddings.
    </Modal__BodyStyled>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Let's do that!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Cancel
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="auto"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "auto",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="auto"
        >
          <Modal__HeaderStyled>
            You are changing the status of this order to Shipped
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            This body has pre-defined paddings.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Let's do that!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>,
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "auto",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "You are changing the status of this order to Shipped",
            },
            "ref": null,
            "rendered": "You are changing the status of this order to Shipped",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This body has pre-defined paddings.",
            },
            "ref": null,
            "rendered": "This body has pre-defined paddings.",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Let's do that!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Let's do that!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Cancel",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="auto"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "auto",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="auto"
          >
            <Modal__HeaderStyled>
              You are changing the status of this order to Shipped
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              This body has pre-defined paddings.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Let's do that!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                You are changing the status of this order to Shipped
              </Modal__HeaderStyled>,
              <Modal__BodyStyled>
                This body has pre-defined paddings.
              </Modal__BodyStyled>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Let's do that!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "auto",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "You are changing the status of this order to Shipped",
              },
              "ref": null,
              "rendered": "You are changing the status of this order to Shipped",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This body has pre-defined paddings.",
              },
              "ref": null,
              "rendered": "This body has pre-defined paddings.",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Let's do that!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Let's do that!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Let's do that!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Cancel",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Modal Component snapshots should match snapshot 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="normal"
  >
    <Modal__HeaderStyled>
      <h1>
        You can suppy your own header
      </h1>
    </Modal__HeaderStyled>
    <Modal__BodyStyled>
      If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
    </Modal__BodyStyled>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Ik snap het!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Nee!
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            <h1>
              You can suppy your own header
            </h1>
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Ik snap het!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Nee!
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "normal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            <h1>
              You can suppy your own header
            </h1>
          </Modal__HeaderStyled>
          <Modal__BodyStyled>
            If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
          </Modal__BodyStyled>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Ik snap het!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Nee!
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              <h1>
                You can suppy your own header
              </h1>
            </Modal__HeaderStyled>,
            <Modal__BodyStyled>
              If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
            </Modal__BodyStyled>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Ik snap het!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Nee!
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "normal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <h1>
                You can suppy your own header
              </h1>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "You can suppy your own header",
              },
              "ref": null,
              "rendered": "You can suppy your own header",
              "type": "h1",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.",
            },
            "ref": null,
            "rendered": "If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Ik snap het!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Nee!
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Ik snap het!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Ik snap het!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Nee!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Nee!",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              <h1>
                You can suppy your own header
              </h1>
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Ik snap het!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Nee!
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "normal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              <h1>
                You can suppy your own header
              </h1>
            </Modal__HeaderStyled>
            <Modal__BodyStyled>
              If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
            </Modal__BodyStyled>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Ik snap het!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Nee!
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                <h1>
                  You can suppy your own header
                </h1>
              </Modal__HeaderStyled>,
              <Modal__BodyStyled>
                If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.
              </Modal__BodyStyled>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Ik snap het!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Nee!
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "normal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <h1>
                  You can suppy your own header
                </h1>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "You can suppy your own header",
                },
                "ref": null,
                "rendered": "You can suppy your own header",
                "type": "h1",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.",
              },
              "ref": null,
              "rendered": "If you do so, styling is up to you. For example, see that this header also has default \`h1\` margins.",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Ik snap het!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Nee!
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Ik snap het!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Ik snap het!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Nee!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Nee!",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Modal Component snapshots should match snapshot 6`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    open={true}
    preventGlobalScroll={true}
    size="normal"
  >
    <Modal__HeaderStyled>
      Check out the body ↓
    </Modal__HeaderStyled>
    <div
      style={
        Object {
          "backgroundColor": "black",
          "color": "white",
          "width": "100%",
        }
      }
    >
      I'm full width!
    </div>
    <Modal__FooterStyled>
      <Button
        appearance="primary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Got it!
      </Button>
      <Button
        appearance="secondary"
        className=""
        disabled={false}
        onClick={[Function]}
        size="normal"
        type="button"
      >
        Cancel
      </Button>
    </Modal__FooterStyled>
  </Modal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "backdropColor": undefined,
      "children": <ReactModal2
        backdropClassName="backdrop"
        closeOnBackdropClick={true}
        closeOnEsc={true}
        modalClassName="modal"
      >
        <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            Check out the body ↓
          </Modal__HeaderStyled>
          <div
            style={
              Object {
                "backgroundColor": "black",
                "color": "white",
                "width": "100%",
              }
            }
          >
            I'm full width!
          </div>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Got it!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>
      </ReactModal2>,
      "role": "dialog",
      "size": "normal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropClassName": "backdrop",
        "children": <Modal__ModalWrapper
          size="normal"
        >
          <Modal__HeaderStyled>
            Check out the body ↓
          </Modal__HeaderStyled>
          <div
            style={
              Object {
                "backgroundColor": "black",
                "color": "white",
                "width": "100%",
              }
            }
          >
            I'm full width!
          </div>
          <Modal__FooterStyled>
            <Button
              appearance="primary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Got it!
            </Button>
            <Button
              appearance="secondary"
              className=""
              disabled={false}
              onClick={[Function]}
              size="normal"
              type="button"
            >
              Cancel
            </Button>
          </Modal__FooterStyled>
        </Modal__ModalWrapper>,
        "closeOnBackdropClick": true,
        "closeOnEsc": true,
        "modalClassName": "modal",
        "onClose": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Modal__HeaderStyled>
              Check out the body ↓
            </Modal__HeaderStyled>,
            <div
              style={
                Object {
                  "backgroundColor": "black",
                  "color": "white",
                  "width": "100%",
                }
              }
            >
              I'm full width!
            </div>,
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Got it!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>,
          ],
          "size": "normal",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Check out the body ↓",
            },
            "ref": null,
            "rendered": "Check out the body ↓",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm full width!",
              "style": Object {
                "backgroundColor": "black",
                "color": "white",
                "width": "100%",
              },
            },
            "ref": null,
            "rendered": "I'm full width!",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Got it!
                </Button>,
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "primary",
                  "children": "Got it!",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Got it!",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "appearance": "secondary",
                  "children": "Cancel",
                  "className": "",
                  "disabled": false,
                  "onClick": [Function],
                  "size": "normal",
                  "type": "button",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backdropColor": undefined,
        "children": <ReactModal2
          backdropClassName="backdrop"
          closeOnBackdropClick={true}
          closeOnEsc={true}
          modalClassName="modal"
        >
          <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              Check out the body ↓
            </Modal__HeaderStyled>
            <div
              style={
                Object {
                  "backgroundColor": "black",
                  "color": "white",
                  "width": "100%",
                }
              }
            >
              I'm full width!
            </div>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Got it!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>
        </ReactModal2>,
        "role": "dialog",
        "size": "normal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backdropClassName": "backdrop",
          "children": <Modal__ModalWrapper
            size="normal"
          >
            <Modal__HeaderStyled>
              Check out the body ↓
            </Modal__HeaderStyled>
            <div
              style={
                Object {
                  "backgroundColor": "black",
                  "color": "white",
                  "width": "100%",
                }
              }
            >
              I'm full width!
            </div>
            <Modal__FooterStyled>
              <Button
                appearance="primary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Got it!
              </Button>
              <Button
                appearance="secondary"
                className=""
                disabled={false}
                onClick={[Function]}
                size="normal"
                type="button"
              >
                Cancel
              </Button>
            </Modal__FooterStyled>
          </Modal__ModalWrapper>,
          "closeOnBackdropClick": true,
          "closeOnEsc": true,
          "modalClassName": "modal",
          "onClose": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Modal__HeaderStyled>
                Check out the body ↓
              </Modal__HeaderStyled>,
              <div
                style={
                  Object {
                    "backgroundColor": "black",
                    "color": "white",
                    "width": "100%",
                  }
                }
              >
                I'm full width!
              </div>,
              <Modal__FooterStyled>
                <Button
                  appearance="primary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Got it!
                </Button>
                <Button
                  appearance="secondary"
                  className=""
                  disabled={false}
                  onClick={[Function]}
                  size="normal"
                  type="button"
                >
                  Cancel
                </Button>
              </Modal__FooterStyled>,
            ],
            "size": "normal",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Check out the body ↓",
              },
              "ref": null,
              "rendered": "Check out the body ↓",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm full width!",
                "style": Object {
                  "backgroundColor": "black",
                  "color": "white",
                  "width": "100%",
                },
              },
              "ref": null,
              "rendered": "I'm full width!",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Button
                    appearance="primary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Got it!
                  </Button>,
                  <Button
                    appearance="secondary"
                    className=""
                    disabled={false}
                    onClick={[Function]}
                    size="normal"
                    type="button"
                  >
                    Cancel
                  </Button>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "primary",
                    "children": "Got it!",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Got it!",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "appearance": "secondary",
                    "children": "Cancel",
                    "className": "",
                    "disabled": false,
                    "onClick": [Function],
                    "size": "normal",
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
