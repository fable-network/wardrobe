// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Don't push me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem>
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Don't push me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={true}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": true,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": true,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Don't push me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    preventOutOfBounds={true}
    search={false}
    selected={false}
  >
    <DropdownItem>
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem>
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Don't push me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    preventOutOfBounds={false}
    search={false}
    selected={false}
  >
    <DropdownItem>
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem>
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem>
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": false,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem>
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": false,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem>
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem>
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Push Me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={true}
    placeholder=""
    search={false}
    selected={false}
  >
    <nobr>
      You can place any content you prefer here.
    </nobr>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <nobr>
          You can place any content you prefer here.
        </nobr>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": true,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <nobr>
          You can place any content you prefer here.
        </nobr>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "You can place any content you prefer here.",
        },
        "ref": null,
        "rendered": "You can place any content you prefer here.",
        "type": "nobr",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <nobr>
            You can place any content you prefer here.
          </nobr>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": true,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <nobr>
            You can place any content you prefer here.
          </nobr>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You can place any content you prefer here.",
          },
          "ref": null,
          "rendered": "You can place any content you prefer here.",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 6`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Push Me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={true}
  >
    <DropdownItem>
      Check that checkmark
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          Check that checkmark
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          Check that checkmark
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Check that checkmark",
        },
        "ref": null,
        "rendered": "Check that checkmark",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            Check that checkmark
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            Check that checkmark
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Check that checkmark",
          },
          "ref": null,
          "rendered": "Check that checkmark",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 7`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Something is happening"
    loading={true}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      Hold on I'm loading
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          Hold on I'm loading
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          Hold on I'm loading
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Hold on I'm loading",
        },
        "ref": null,
        "rendered": "Hold on I'm loading",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            Hold on I'm loading
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            Hold on I'm loading
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Hold on I'm loading",
          },
          "ref": null,
          "rendered": "Hold on I'm loading",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 8`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={true}
    fluid={false}
    label="Select"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      I'll never be seen
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          I'll never be seen
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": true,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          I'll never be seen
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "I'll never be seen",
        },
        "ref": null,
        "rendered": "I'll never be seen",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            I'll never be seen
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": true,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            I'll never be seen
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "I'll never be seen",
          },
          "ref": null,
          "rendered": "I'll never be seen",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 9`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label={
      <h3>
        h3 label
      </h3>
    }
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      Hey there
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          Hey there
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          Hey there
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Hey there",
        },
        "ref": null,
        "rendered": "Hey there",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            Hey there
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            Hey there
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Hey there",
          },
          "ref": null,
          "rendered": "Hey there",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 10`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="Select"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    open={true}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      <nobr>
        You can't close me
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          <nobr>
            You can't close me
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": true,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          <nobr>
            You can't close me
          </nobr>
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <nobr>
            You can't close me
          </nobr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You can't close me",
          },
          "ref": null,
          "rendered": "You can't close me",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            <nobr>
              You can't close me
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": true,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            <nobr>
              You can't close me
            </nobr>
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              You can't close me
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You can't close me",
            },
            "ref": null,
            "rendered": "You can't close me",
            "type": "nobr",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 11`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={false}
    label="You can't open me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    open={false}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem>
      <nobr>
        You will never see me
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem>
          <nobr>
            You will never see me
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": false,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem>
          <nobr>
            You will never see me
          </nobr>
        </DropdownItem>,
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <nobr>
            You will never see me
          </nobr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You will never see me",
          },
          "ref": null,
          "rendered": "You will never see me",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem>
            <nobr>
              You will never see me
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": false,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem>
            <nobr>
              You will never see me
            </nobr>
          </DropdownItem>,
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              You will never see me
            </nobr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You will never see me",
            },
            "ref": null,
            "rendered": "You will never see me",
            "type": "nobr",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 12`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    disabled={false}
    fluid={true}
    label="Don't push me"
    loading={false}
    onClick={[Function]}
    onClose={[Function]}
    onOpen={[Function]}
    onSearch={[Function]}
    persist={false}
    placeholder=""
    search={false}
    selected={false}
  >
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem
      onSelect={[Function]}
    >
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel
        innerRef={[Function]}
        lastInteractionKeyboard={false}
        onKeyDown={[Function]}
        onKeyDownCapture={[Function]}
        onMouseMove={[Function]}
      >
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem
          onSelect={[Function]}
        >
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "disabled": false,
      "fluid": true,
      "innerRef": [Function],
      "menuOffset": "0.25rem",
      "onClose": [Function],
      "onOpen": [Function],
      "open": false,
      "persist": false,
      "position": "bottom",
      "preventOutOfBounds": true,
      "renderTrigger": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
        "innerRef": [Function],
        "lastInteractionKeyboard": false,
        "onKeyDown": [Function],
        "onKeyDownCapture": [Function],
        "onMouseMove": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
            "onSelect": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel
          innerRef={[Function]}
          lastInteractionKeyboard={false}
          onKeyDown={[Function]}
          onKeyDownCapture={[Function]}
          onMouseMove={[Function]}
        >
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem
            onSelect={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "disabled": false,
        "fluid": true,
        "innerRef": [Function],
        "menuOffset": "0.25rem",
        "onClose": [Function],
        "onOpen": [Function],
        "open": false,
        "persist": false,
        "position": "bottom",
        "preventOutOfBounds": true,
        "renderTrigger": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onSelect={[Function]}
            >
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
          "innerRef": [Function],
          "lastInteractionKeyboard": false,
          "onKeyDown": [Function],
          "onKeyDownCapture": [Function],
          "onMouseMove": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
              "onSelect": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
