// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={false}
    isSelected={false}
    label="Don't push me"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        ...cause I'm close to the edge
      </nobr>
    </DropdownItem>
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        I'm trying not to lose my head
      </nobr>
    </DropdownItem>
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        It's like a jungle sometimes
      </nobr>
    </DropdownItem>
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        It makes me wonder how I keep from goin' under
      </nobr>
    </DropdownItem>
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        -- Grandmaster Flash
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            ...cause I'm close to the edge
          </nobr>
        </DropdownItem>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            I'm trying not to lose my head
          </nobr>
        </DropdownItem>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            It's like a jungle sometimes
          </nobr>
        </DropdownItem>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            It makes me wonder how I keep from goin' under
          </nobr>
        </DropdownItem>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            -- Grandmaster Flash
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": undefined,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          Don't push me
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={false}
            height={9}
            name="caret-down"
            open={false}
            selected={false}
            width={16}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>,
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              ...cause I'm close to the edge
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...cause I'm close to the edge",
            },
            "ref": null,
            "rendered": "...cause I'm close to the edge",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              I'm trying not to lose my head
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "I'm trying not to lose my head",
            },
            "ref": null,
            "rendered": "I'm trying not to lose my head",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              It's like a jungle sometimes
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It's like a jungle sometimes",
            },
            "ref": null,
            "rendered": "It's like a jungle sometimes",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "It makes me wonder how I keep from goin' under",
            },
            "ref": null,
            "rendered": "It makes me wonder how I keep from goin' under",
            "type": "nobr",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              -- Grandmaster Flash
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "-- Grandmaster Flash",
            },
            "ref": null,
            "rendered": "-- Grandmaster Flash",
            "type": "nobr",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              ...cause I'm close to the edge
            </nobr>
          </DropdownItem>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              I'm trying not to lose my head
            </nobr>
          </DropdownItem>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              It's like a jungle sometimes
            </nobr>
          </DropdownItem>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              It makes me wonder how I keep from goin' under
            </nobr>
          </DropdownItem>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              -- Grandmaster Flash
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": undefined,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            Don't push me
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={false}
              height={9}
              name="caret-down"
              open={false}
              selected={false}
              width={16}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DropdownItem
              onClick={[Function]}
            >
              <nobr>
                ...cause I'm close to the edge
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
            >
              <nobr>
                I'm trying not to lose my head
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
            >
              <nobr>
                It's like a jungle sometimes
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
            >
              <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
            >
              <nobr>
                -- Grandmaster Flash
              </nobr>
            </DropdownItem>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <nobr>
                ...cause I'm close to the edge
              </nobr>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...cause I'm close to the edge",
              },
              "ref": null,
              "rendered": "...cause I'm close to the edge",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <nobr>
                I'm trying not to lose my head
              </nobr>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "I'm trying not to lose my head",
              },
              "ref": null,
              "rendered": "I'm trying not to lose my head",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <nobr>
                It's like a jungle sometimes
              </nobr>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It's like a jungle sometimes",
              },
              "ref": null,
              "rendered": "It's like a jungle sometimes",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <nobr>
                It makes me wonder how I keep from goin' under
              </nobr>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "It makes me wonder how I keep from goin' under",
              },
              "ref": null,
              "rendered": "It makes me wonder how I keep from goin' under",
              "type": "nobr",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <nobr>
                -- Grandmaster Flash
              </nobr>,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "-- Grandmaster Flash",
              },
              "ref": null,
              "rendered": "-- Grandmaster Flash",
              "type": "nobr",
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={false}
    isSelected={false}
    label="Push Me"
    onClose={[Function]}
  >
    <nobr>
      You can place any content you prefer here.
    </nobr>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <nobr>
          You can place any content you prefer here.
        </nobr>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": undefined,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          Push Me
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={false}
            height={9}
            name="caret-down"
            open={false}
            selected={false}
            width={16}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <nobr>
          You can place any content you prefer here.
        </nobr>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "You can place any content you prefer here.",
        },
        "ref": null,
        "rendered": "You can place any content you prefer here.",
        "type": "nobr",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <nobr>
            You can place any content you prefer here.
          </nobr>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": undefined,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            Push Me
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={false}
              height={9}
              name="caret-down"
              open={false}
              selected={false}
              width={16}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <nobr>
            You can place any content you prefer here.
          </nobr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You can place any content you prefer here.",
          },
          "ref": null,
          "rendered": "You can place any content you prefer here.",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={false}
    isSelected={true}
    label="Push Me"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      Check that checkmark
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          Check that checkmark
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": undefined,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          Push Me
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={false}
            height={9}
            name="caret-selected"
            open={false}
            selected={true}
            width={11}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem
          onClick={[Function]}
        >
          Check that checkmark
        </DropdownItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Check that checkmark",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Check that checkmark",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            Check that checkmark
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": undefined,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            Push Me
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={false}
              height={9}
              name="caret-selected"
              open={false}
              selected={true}
              width={11}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem
            onClick={[Function]}
          >
            Check that checkmark
          </DropdownItem>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Check that checkmark",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Check that checkmark",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={true}
    isSelected={false}
    label="Something is happening"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      Hold on I'm loading
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          Hold on I'm loading
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": undefined,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          Something is happening
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <WithTheme(LoadingSpinner)
            size="17px"
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem
          onClick={[Function]}
        >
          Hold on I'm loading
        </DropdownItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Hold on I'm loading",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Hold on I'm loading",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            Hold on I'm loading
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": undefined,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            Something is happening
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <WithTheme(LoadingSpinner)
              size="17px"
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem
            onClick={[Function]}
          >
            Hold on I'm loading
          </DropdownItem>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Hold on I'm loading",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Hold on I'm loading",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 5`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={true}
    isLoading={false}
    isSelected={false}
    label="Select"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      I'll never be seen
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          I'll never be seen
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": true,
      "isOpen": undefined,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={true}
      >
        <Dropdown__Label>
          Select
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={true}
            height={9}
            name="caret-down"
            open={false}
            selected={false}
            width={16}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem
          onClick={[Function]}
        >
          I'll never be seen
        </DropdownItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "I'll never be seen",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "I'll never be seen",
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            I'll never be seen
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": true,
        "isOpen": undefined,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={true}
        >
          <Dropdown__Label>
            Select
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={true}
              height={9}
              name="caret-down"
              open={false}
              selected={false}
              width={16}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem
            onClick={[Function]}
          >
            I'll never be seen
          </DropdownItem>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "I'll never be seen",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "I'll never be seen",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 6`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={false}
    isOpen={true}
    isSelected={false}
    label="Select"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        You can't close me
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            You can't close me
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": true,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          Select
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={false}
            height={9}
            name="caret-down"
            open={false}
            selected={false}
            width={16}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            You can't close me
          </nobr>
        </DropdownItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <nobr>
            You can't close me
          </nobr>,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You can't close me",
          },
          "ref": null,
          "rendered": "You can't close me",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              You can't close me
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": true,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            Select
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={false}
              height={9}
              name="caret-down"
              open={false}
              selected={false}
              width={16}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              You can't close me
            </nobr>
          </DropdownItem>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              You can't close me
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You can't close me",
            },
            "ref": null,
            "rendered": "You can't close me",
            "type": "nobr",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`Dropdown Component snapshots should match snapshot 7`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Dropdown
    className={null}
    isDisabled={false}
    isLoading={false}
    isOpen={false}
    isSelected={false}
    label="You can't open me"
    onClose={[Function]}
  >
    <DropdownItem
      onClick={[Function]}
    >
      <nobr>
        You will never see me
      </nobr>
    </DropdownItem>
  </Dropdown>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Dropdown__DropdownPanel>
        <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            You will never see me
          </nobr>
        </DropdownItem>
      </Dropdown__DropdownPanel>,
      "className": null,
      "closeOnOutsideClick": true,
      "isDisabled": false,
      "isOpen": false,
      "menuOffset": "5px",
      "onClose": [Function],
      "onOpen": [Function],
      "position": "bottom",
      "preventOutOfBounds": false,
      "trigger": <Dropdown__DropdownButton
        isDisabled={false}
      >
        <Dropdown__Label>
          You can't open me
        </Dropdown__Label>
        <Dropdown__IconWrapper>
          <Dropdown__StyledIcon
            disabled={false}
            height={9}
            name="caret-down"
            open={false}
            selected={false}
            width={16}
          />
        </Dropdown__IconWrapper>
      </Dropdown__DropdownButton>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DropdownItem
          onClick={[Function]}
        >
          <nobr>
            You will never see me
          </nobr>
        </DropdownItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <nobr>
            You will never see me
          </nobr>,
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You will never see me",
          },
          "ref": null,
          "rendered": "You will never see me",
          "type": "nobr",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Dropdown__DropdownPanel>
          <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              You will never see me
            </nobr>
          </DropdownItem>
        </Dropdown__DropdownPanel>,
        "className": null,
        "closeOnOutsideClick": true,
        "isDisabled": false,
        "isOpen": false,
        "menuOffset": "5px",
        "onClose": [Function],
        "onOpen": [Function],
        "position": "bottom",
        "preventOutOfBounds": false,
        "trigger": <Dropdown__DropdownButton
          isDisabled={false}
        >
          <Dropdown__Label>
            You can't open me
          </Dropdown__Label>
          <Dropdown__IconWrapper>
            <Dropdown__StyledIcon
              disabled={false}
              height={9}
              name="caret-down"
              open={false}
              selected={false}
              width={16}
            />
          </Dropdown__IconWrapper>
        </Dropdown__DropdownButton>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DropdownItem
            onClick={[Function]}
          >
            <nobr>
              You will never see me
            </nobr>
          </DropdownItem>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <nobr>
              You will never see me
            </nobr>,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "You will never see me",
            },
            "ref": null,
            "rendered": "You will never see me",
            "type": "nobr",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
