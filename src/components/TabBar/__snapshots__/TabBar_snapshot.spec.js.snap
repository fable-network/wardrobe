// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabBar Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="center"
    size="normal"
  >
    <TabBarItem
      value="overview"
    >
      Proposal overview
    </TabBarItem>
    <TabBarItem
      value="analytics"
    >
      Analytics
    </TabBarItem>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "align": "center",
      "children": Array [
        <TabBarItem
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </TabBarItem>,
        <TabBarItem
          onClick={[Function]}
          selected={false}
          value="analytics"
        >
          Analytics
        </TabBarItem>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "class",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "class",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": false,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "align": "center",
        "children": Array [
          <TabBarItem
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </TabBarItem>,
          <TabBarItem
            onClick={[Function]}
            selected={false}
            value="analytics"
          >
            Analytics
          </TabBarItem>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "class",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "class",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": false,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`TabBar Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="center"
    defaultValue="analytics"
    onSelect={[Function]}
    size="large"
  >
    <TabBarItem
      value="overview"
    >
      Proposal overview
    </TabBarItem>
    <TabBarItem
      value="analytics"
    >
      Analytics
    </TabBarItem>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "align": "center",
      "children": Array [
        <TabBarItem
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </TabBarItem>,
        <TabBarItem
          onClick={[Function]}
          selected={true}
          value="analytics"
        >
          Analytics
        </TabBarItem>,
      ],
      "defaultValue": "analytics",
      "onSelect": [Function],
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "class",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "class",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": true,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "align": "center",
        "children": Array [
          <TabBarItem
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </TabBarItem>,
          <TabBarItem
            onClick={[Function]}
            selected={true}
            value="analytics"
          >
            Analytics
          </TabBarItem>,
        ],
        "defaultValue": "analytics",
        "onSelect": [Function],
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "class",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "class",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": true,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`TabBar Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="left"
    size="normal"
  >
    <TabBarItem
      value="overview"
    >
      Proposal overview
    </TabBarItem>
    <TabBarItem
      value="analytics"
    >
      Analytics
    </TabBarItem>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "align": "left",
      "children": Array [
        <TabBarItem
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </TabBarItem>,
        <TabBarItem
          onClick={[Function]}
          selected={false}
          value="analytics"
        >
          Analytics
        </TabBarItem>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "class",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "class",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": false,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "align": "left",
        "children": Array [
          <TabBarItem
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </TabBarItem>,
          <TabBarItem
            onClick={[Function]}
            selected={false}
            value="analytics"
          >
            Analytics
          </TabBarItem>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "class",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "class",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": false,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
