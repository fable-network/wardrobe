// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabBar Component snapshots should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="center"
    size="normal"
  >
    <ForwardRef
      value="overview"
    >
      Proposal overview
    </ForwardRef>
    <ForwardRef
      value="analytics"
    >
      Analytics
    </ForwardRef>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "center",
      "children": Array [
        <ForwardRef
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </ForwardRef>,
        <ForwardRef
          onClick={[Function]}
          selected={false}
          value="analytics"
        >
          Analytics
        </ForwardRef>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "function",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "function",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": false,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "TabBar__Wrapper-bwtm1c-0",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:row wrap;justify-content:",
          [Function],
          ";align-items:center;border-bottom:solid 1px ",
          [Function],
          ";margin:0;padding:0;min-height:",
          [Function],
          ";",
          ".TabBarItem-sc-16sux8d-0",
          "{font-size:",
          [Function],
          ";line-height:",
          [Function],
          ";",
          [Function],
          ";}",
        ],
      },
      "displayName": "TabBar__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "center",
        "children": Array [
          <ForwardRef
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </ForwardRef>,
          <ForwardRef
            onClick={[Function]}
            selected={false}
            value="analytics"
          >
            Analytics
          </ForwardRef>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "function",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "function",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": false,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "TabBar__Wrapper-bwtm1c-0",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:row wrap;justify-content:",
            [Function],
            ";align-items:center;border-bottom:solid 1px ",
            [Function],
            ";margin:0;padding:0;min-height:",
            [Function],
            ";",
            ".TabBarItem-sc-16sux8d-0",
            "{font-size:",
            [Function],
            ";line-height:",
            [Function],
            ";",
            [Function],
            ";}",
          ],
        },
        "displayName": "TabBar__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`TabBar Component snapshots should match snapshot 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="center"
    defaultValue="analytics"
    onSelect={[Function]}
    size="large"
  >
    <ForwardRef
      value="overview"
    >
      Proposal overview
    </ForwardRef>
    <ForwardRef
      value="analytics"
    >
      Analytics
    </ForwardRef>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "center",
      "children": Array [
        <ForwardRef
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </ForwardRef>,
        <ForwardRef
          onClick={[Function]}
          selected={true}
          value="analytics"
        >
          Analytics
        </ForwardRef>,
      ],
      "defaultValue": "analytics",
      "onSelect": [Function],
      "size": "large",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "function",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "function",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": true,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "TabBar__Wrapper-bwtm1c-0",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:row wrap;justify-content:",
          [Function],
          ";align-items:center;border-bottom:solid 1px ",
          [Function],
          ";margin:0;padding:0;min-height:",
          [Function],
          ";",
          ".TabBarItem-sc-16sux8d-0",
          "{font-size:",
          [Function],
          ";line-height:",
          [Function],
          ";",
          [Function],
          ";}",
        ],
      },
      "displayName": "TabBar__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "center",
        "children": Array [
          <ForwardRef
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </ForwardRef>,
          <ForwardRef
            onClick={[Function]}
            selected={true}
            value="analytics"
          >
            Analytics
          </ForwardRef>,
        ],
        "defaultValue": "analytics",
        "onSelect": [Function],
        "size": "large",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "function",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "function",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": true,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "TabBar__Wrapper-bwtm1c-0",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:row wrap;justify-content:",
            [Function],
            ";align-items:center;border-bottom:solid 1px ",
            [Function],
            ";margin:0;padding:0;min-height:",
            [Function],
            ";",
            ".TabBarItem-sc-16sux8d-0",
            "{font-size:",
            [Function],
            ";line-height:",
            [Function],
            ";",
            [Function],
            ";}",
          ],
        },
        "displayName": "TabBar__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`TabBar Component snapshots should match snapshot 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TabBar
    align="left"
    size="normal"
  >
    <ForwardRef
      value="overview"
    >
      Proposal overview
    </ForwardRef>
    <ForwardRef
      value="analytics"
    >
      Analytics
    </ForwardRef>
  </TabBar>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "align": "left",
      "children": Array [
        <ForwardRef
          onClick={[Function]}
          selected={false}
          value="overview"
        >
          Proposal overview
        </ForwardRef>,
        <ForwardRef
          onClick={[Function]}
          selected={false}
          value="analytics"
        >
          Analytics
        </ForwardRef>,
      ],
      "size": "normal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "function",
        "props": Object {
          "children": "Proposal overview",
          "onClick": [Function],
          "selected": false,
          "value": "overview",
        },
        "ref": null,
        "rendered": "Proposal overview",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "function",
        "props": Object {
          "children": "Analytics",
          "onClick": [Function],
          "selected": false,
          "value": "analytics",
        },
        "ref": null,
        "rendered": "Analytics",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "TabBarItem-sc-16sux8d-0",
            "isStatic": false,
            "rules": Array [
              "display:block;position:relative;color:",
              [Function],
              ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
              [Function],
              " ",
              [Function],
              " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
              [Function],
              ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
              [Function],
              ";",
            ],
          },
          "displayName": "TabBarItem",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "children": [Function],
            "value": [Function],
          },
          "render": [Function],
          "styledComponentId": "TabBarItem-sc-16sux8d-0",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "TabBar__Wrapper-bwtm1c-0",
        "isStatic": false,
        "rules": Array [
          "display:flex;flex-flow:row wrap;justify-content:",
          [Function],
          ";align-items:center;border-bottom:solid 1px ",
          [Function],
          ";margin:0;padding:0;min-height:",
          [Function],
          ";",
          ".TabBarItem-sc-16sux8d-0",
          "{font-size:",
          [Function],
          ";line-height:",
          [Function],
          ";",
          [Function],
          ";}",
        ],
      },
      "displayName": "TabBar__Wrapper",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "align": "left",
        "children": Array [
          <ForwardRef
            onClick={[Function]}
            selected={false}
            value="overview"
          >
            Proposal overview
          </ForwardRef>,
          <ForwardRef
            onClick={[Function]}
            selected={false}
            value="analytics"
          >
            Analytics
          </ForwardRef>,
        ],
        "size": "normal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "function",
          "props": Object {
            "children": "Proposal overview",
            "onClick": [Function],
            "selected": false,
            "value": "overview",
          },
          "ref": null,
          "rendered": "Proposal overview",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "function",
          "props": Object {
            "children": "Analytics",
            "onClick": [Function],
            "selected": false,
            "value": "analytics",
          },
          "ref": null,
          "rendered": "Analytics",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "TabBarItem-sc-16sux8d-0",
              "isStatic": false,
              "rules": Array [
                "display:block;position:relative;color:",
                [Function],
                ";background-color:transparent;cursor:pointer;outline:0 none;border:0 none;overflow:visible;border-radius:",
                [Function],
                " ",
                [Function],
                " 0 0;transform:translateY(1px);[data-whatintent='mouse'] &:hover,[data-whatintent='keyboard'] &:focus{background-color:",
                [Function],
                ";}&:disabled{&,&:hover,&:focus{cursor:not-allowed;background-color:transparent;&::after{display:none;}}}",
                [Function],
                ";",
              ],
            },
            "displayName": "TabBarItem",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
              "value": [Function],
            },
            "render": [Function],
            "styledComponentId": "TabBarItem-sc-16sux8d-0",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "TabBar__Wrapper-bwtm1c-0",
          "isStatic": false,
          "rules": Array [
            "display:flex;flex-flow:row wrap;justify-content:",
            [Function],
            ";align-items:center;border-bottom:solid 1px ",
            [Function],
            ";margin:0;padding:0;min-height:",
            [Function],
            ";",
            ".TabBarItem-sc-16sux8d-0",
            "{font-size:",
            [Function],
            ";line-height:",
            [Function],
            ";",
            [Function],
            ";}",
          ],
        },
        "displayName": "TabBar__Wrapper",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "TabBar__Wrapper-bwtm1c-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
